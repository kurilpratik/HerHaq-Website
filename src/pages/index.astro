---
import MainLayout from "../layouts/MainLayout.astro";
import InstagramPosts from "../components/InstagramPosts.astro";
---

<MainLayout title="Home" description="Home Page of the Her Haq Organization">
  <section class="hero">
    <div class="hero-background">
      <img src="/banner/home.jpg" alt="Empowering Women" class="hero-image" />
      <div class="hero-overlay"></div>
    </div>
    <div class="hero-content">
      <div class="container">
        <h1 class="hero-title">
          Empowering Women.<br /> Transforming Communities
        </h1>
        <p class="hero-subtitle">
          Join us in creating lasting change and building a more equitable world
          for all
        </p>
        <a href="/contact" class="btn-primary">Join Us</a>
      </div>
    </div>
  </section>

  <!-- Mission Section -->
  <section class="mission-section">
    <div class="container">
      <!-- Statistics -->
      <div class="stats-container">
        <div class="stat-item">
          <div class="stat-number" data-target="30" data-suffix="+">0+</div>
          <div class="stat-label">Partners</div>
        </div>
        <div class="stat-item">
          <div class="stat-number" data-target="10" data-suffix="+">0+</div>
          <div class="stat-label">Cities</div>
        </div>
        <div class="stat-item">
          <div class="stat-number" data-target="1000" data-suffix="+">0+</div>
          <div class="stat-label">Beneficiaries</div>
        </div>
      </div>

      <!-- Mission Statement -->
      <div class="mission-content">
        <h2 class="mission-title">OUR MISSION</h2>
        <div class="mission-text">
          <p>
            We believe gender justice isn't just a campaign, it is a lifelong
            commitment to listening, building, and transforming. At Her Haq,
            this belief is both personal and structural. Our work is powered by
            passion but anchored in practice. We don't parachute in with
            ready-made answers; we start by showing up, listening closely, and
            working alongside communities to understand what justice looks like
            in their context. From there, we co-create solutions that are
            practical, scalable, and rooted in lived experience.
          </p>
          <p>
            Every action we take stems from a deep commitment to amplifying
            voices that have long been ignored and shifting power where it
            belongs.
          </p>
        </div>
      </div>
    </div>
  </section>

  <!-- Call to Action Section -->
  <section class="cta-section">
    <div class="container">
      <div class="cta-content">
        <h2 class="cta-mission-text">
          At Her Haq, we aren't just raising awareness. We're shifting
          narratives, redistributing power, and building structures that last.
        </h2>
        <div class="cta-buttons">
          <a href="/contact" class="btn-primary">Volunteer With Us</a>
          <!-- <div class="cta-separator"></div> -->
          <a href="/contact" class="btn-primary">Partner With Us</a>
          <!-- <div class="cta-separator"></div> -->
          <a href="/events" class="btn-primary">Meet With Us</a>
        </div>
      </div>
    </div>
  </section>

  <!-- Instagram Posts Section -->
  <InstagramPosts />
</MainLayout>

<style lang="scss" is:global>
  @import "../styles/styles.scss";

  // Mission Section Styles
  .mission-section {
    padding: 5rem 1rem 0 0;
    background: white;
  }

  .stats-container {
    display: flex;
    justify-content: center;
    gap: 6rem;
    margin-bottom: 4rem;

    @include mobile {
      flex-direction: column;
      gap: 2rem;
      align-items: center;
    }
  }

  .stat-item {
    text-align: center;
  }

  .stat-number {
    font-weight: $font-weight-bold;
    font-size: 3rem;
    color: $primary;
    margin-bottom: 0.5rem;

    @include mobile {
      font-size: 2.5rem;
    }
  }

  .stat-label {
    font-size: 1.1rem;
    color: $primary;
    letter-spacing: 1px;

    @include mobile {
      font-size: 1rem;
    }
  }

  .mission-content {
    max-width: 800px;
    margin: 0 auto;
    text-align: center;
  }

  .mission-title {
    font-weight: $font-weight-bold;
    font-size: 2.5rem;
    color: $primary;
    margin-bottom: 2rem;
    text-transform: uppercase;
    letter-spacing: 2px;

    @include mobile {
      font-size: 2rem;
      margin-bottom: 1.5rem;
    }
  }

  .mission-text {
    p {
      font-size: 1.1rem;
      line-height: 1.8;
      color: #000;
      margin-bottom: 1.5rem;
      text-align: center;

      @include mobile {
        font-size: 1rem;
        line-height: 1.6;
        margin-bottom: 1rem;
      }
    }
  }

  // Call to Action Section Styles
  .cta-section {
    padding: 5rem 0;
    background: white;
  }

  .cta-content {
    text-align: center;
    max-width: 900px;
    margin: 0 auto;
  }

  .cta-mission-text {
    font-weight: $font-weight-bold;
    font-size: 1.5rem;
    color: $primary;
    margin-bottom: 3rem;
    line-height: 1.4;

    @include mobile {
      font-size: 1.25rem;
      margin-bottom: 2rem;
    }
  }

  .cta-buttons {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 2rem;
    margin-bottom: 1rem;

    @include mobile {
      flex-direction: column;
      gap: 1rem;
    }
  }

  .cta-separator {
    width: 2px;
    height: 40px;
    background: $primary;
    margin: 0 1rem;

    @include mobile {
      display: none;
    }
  }

  .cta-note {
    font-size: 0.9rem;
    color: $primary;
    margin-top: 0.5rem;
    font-style: italic;
  }
</style>

<script>
  // Animation function to count up from 0 to target number
  function animateNumber(
    element: HTMLElement,
    target: number,
    suffix: string,
    duration: number,
  ) {
    const start = 0;
    const increment = target / (duration / 16); // 60fps assumption
    let current = start;

    const updateNumber = () => {
      current += increment;
      if (current < target) {
        element.textContent = Math.floor(current) + suffix;
        requestAnimationFrame(updateNumber);
      } else {
        element.textContent = target + suffix;
      }
    };

    updateNumber();
  }

  // Intersection Observer to trigger animation when stats come into view
  document.addEventListener("DOMContentLoaded", () => {
    const statNumbers = document.querySelectorAll(
      ".stat-number",
    ) as NodeListOf<HTMLElement>;

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const target = entry.target as HTMLElement;
            const targetValue = parseInt(
              target.getAttribute("data-target") || "0",
            );
            const suffix = target.getAttribute("data-suffix") || "";

            // Only animate if not already animated
            if (!target.classList.contains("animated")) {
              target.classList.add("animated");
              animateNumber(target, targetValue, suffix, 1500); // 1.5 second duration
            }

            // Stop observing once animated
            observer.unobserve(target);
          }
        });
      },
      {
        threshold: 0.5, // Trigger when 50% of the element is visible
      },
    );

    statNumbers.forEach((stat) => {
      observer.observe(stat);
    });
  });
</script>
