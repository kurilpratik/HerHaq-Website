---
import navbarData from "../data/navbarData";
import Link from "./Link.astro";

// Get current path for active link detection
const currentPath = Astro.url.pathname;

// Normalize paths by removing trailing slashes for comparison
const normalizePath = (path) => {
  return path.endsWith("/") && path !== "/" ? path.slice(0, -1) : path;
};

const normalizedCurrentPath = normalizePath(currentPath);
---

<nav class="container" aria-label="Primary">
  <a href="/" class="logo">
    <img src="/logos/logo.png" alt="Logo for HerHaq" />
  </a>
  <div class="nav-links">
    {
      navbarData.map((item) => {
        const isActive =
          normalizedCurrentPath === normalizePath(item.path) ||
          (normalizedCurrentPath === "/" && item.path === "/");
        // (currentPath !== "/" && currentPath.startsWith(item.path));
        // Useful for extended paths such as about/Aanya
        return (
          <a
            href={item.path}
            class={`desktop-link ${isActive ? "active" : ""}`}
          >
            {item.name}
          </a>
        );
      })
    }
    <!-- <Link href='/contact.html' text='Contact Us' style='btn-outline' /> -->
    <a class="menu" id="menu">
      <img src="/menu-icon.png" class="menu-icon" id="menu-icon" alt="" />
    </a>
  </div>
</nav>

<div class="mobile-nav" id="mobile-nav">
  <div class="container">
    <ul>
      {
        navbarData.map((item) => {
          const isActive =
            normalizedCurrentPath === normalizePath(item.path) ||
            (normalizedCurrentPath === "/" && item.path === "/");
          // (currentPath !== "/" && currentPath.startsWith(item.path));
          return (
            <a href={item.path} class={isActive ? "active" : ""}>
              <li>{item.name}</li>
            </a>
          );
        })
      }
    </ul>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    /* Mobile Nav */
    const menu = document.getElementById("menu") as HTMLImageElement;
    const menuIcon = document.getElementById("menu-icon") as HTMLImageElement;
    const mobileNav = document.getElementById("mobile-nav");

    menu.addEventListener("click", () => {
      const isOpen = mobileNav.classList.contains("nav-open");

      if (!isOpen) {
        // Opening animation
        mobileNav.classList.add("nav-open");
        menuIcon.src = "/close-icon.png";
        menuIcon.height = 36;
        menuIcon.width = 36;

        // Add staggered animation to menu items
        const menuItems = mobileNav.querySelectorAll("a");
        menuItems.forEach((item, index) => {
          item.style.animationDelay = `${index * 0.1}s`;
          item.classList.add("slide-in");
        });
      } else {
        // Closing animation
        mobileNav.classList.remove("nav-open");
        menuIcon.src = "/menu-icon.png";
        menuIcon.height = 42;
        menuIcon.width = 42;

        // Remove animation classes
        const menuItems = mobileNav.querySelectorAll("a");
        menuItems.forEach((item) => {
          item.classList.remove("slide-in");
        });
      }
    });
  });
</script>

<style lang="scss" is:global>
  @import "../styles/styles.scss";
  nav {
    position: fixed;
    top: 0;
    left: 0;
    background-color: #fff;
    z-index: 999;
    width: 100vw;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px 0;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

    // Override container class constraints
    &.container {
      width: 100%;
      margin: 0;
      padding-left: 10%;
      padding-right: 10%;

      @include mobile {
        padding-left: 5%;
        padding-right: 5%;
      }
    }

    img {
      height: 36px;
      @include mobile {
        height: 36px;
      }
    }
    .nav-links {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .nav-links a {
      padding: 0 12px;
      margin: 0 8px;
      color: $primary;
      text-decoration: none;
      @include mobile {
        padding: 0 2px;
      }
    }
    .nav-links a:hover {
      color: $primary;
    }

    .nav-links a.active {
      color: $primary;
      font-weight: $font-weight-bold;
      position: relative;

      &::after {
        content: "";
        position: absolute;
        bottom: -12px;
        left: 50%;
        transform: translateX(-50%);
        width: 95%;
        height: 4px;
        background-color: $primary;
        border-radius: 1px;
      }
    }

    .desktop-link {
      @include mobile {
        display: none;
      }
    }
    .menu {
      display: none;
      padding: 0 !important;
      @include mobile {
        display: block;
      }
    }
    .menu img {
      height: 36px;
      width: 36px;
      transition: transform 0.3s ease;
    }

    .menu:hover img {
      transform: scale(1.1);
    }
  }

  .mobile-nav {
    width: 100vw;
    position: fixed;
    top: 64px; // Position below the fixed navbar
    left: 0;
    background-color: #fff;
    z-index: 9;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    padding-bottom: 0.5rem;
    box-sizing: content-box;

    // Initial state - hidden
    transform: translateY(-100%);
    opacity: 0;
    visibility: hidden;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);

    // Override container class constraints
    .container {
      width: 100%;
      margin: 0;
      padding-left: 10%;
      padding-right: 10%;

      @include mobile {
        padding-left: 5%;
        padding-right: 5%;
      }
    }

    // Open state
    &.nav-open {
      transform: translateY(0);
      opacity: 1;
      visibility: visible;
    }

    ul {
      width: 100%;
      display: flex;
      flex-wrap: wrap;
      padding: 0;
      justify-content: center;

      a {
        display: block;
        width: 100%;
        color: #000;
        text-decoration: none;
        list-style: none;
        padding: 1rem;
        text-align: center;
        font-weight: $font-weight-bold;
        font-weight: 600;
        transition: all 0.3s ease;
        transform: translateX(-20px);
        opacity: 0;

        &:focus {
          border: 2px lightblue solid;
        }

        &.active {
          color: $primary;
          background-color: rgba($primary, 0.1);
          border-left: 3px solid $primary;
          font-weight: 700;
        }

        // Slide in animation
        &.slide-in {
          animation: slideInFromLeft 0.5s ease forwards;
        }

        // Hover effect
        &:hover {
          background-color: rgba($primary, 0.05);
          transform: translateX(0) scale(1.02);
        }
      }

      li {
        width: 100%;
      }
    }

    @include mobile {
      display: block;
    }
  }

  // Keyframe animations
  @keyframes slideInFromLeft {
    0% {
      transform: translateX(-20px);
      opacity: 0;
    }
    100% {
      transform: translateX(0);
      opacity: 1;
    }
  }

  @keyframes fadeInUp {
    0% {
      transform: translateY(20px);
      opacity: 0;
    }
    100% {
      transform: translateY(0);
      opacity: 1;
    }
  }
</style>
